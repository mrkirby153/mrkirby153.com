---
import "../styles/global.css";
interface Props {
  title?: string;
  compactTop?: boolean;
  description?: string;
  opengraph?: {
    [key: string]: string;
  };
}

const { title, compactTop, description, opengraph } = Astro.props;

const realTitle = title ? `${title} | mrkirby153.com` : "mrkirby153.com";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description || "mrkirby153.com"} />
    <meta name="viewport" content="width=device-width" />
    <meta name="darkreader-lock" />
    {
      opengraph &&
        Object.entries(opengraph).map(([key, value]) => (
          <meta property={key} content={value} />
        ))
    }
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="RSS"
      href={new URL("rss.xml", Astro.site)}
    />
    <title>{realTitle}</title>
  </head>
  <body>
    <div class={compactTop ? "main-content-compact" : "main-content"}>
      <slot />
    </div>
  </body>
</html>

<style is:global>
  @reference "tailwindcss";
  html {
    @apply text-[1.2rem];
  }
  a:not(.no-style) {
    @apply hover:underline dark:hover:text-blue-400 text-blue-600 hover:text-blue-800 dark:text-blue-200 transition ease-in-out;
  }
  p {
    @apply pt-1 pb-1;
  }
</style>

<style>
  @reference "tailwindcss";
  html {
    @apply dark:bg-[#303030] dark:text-white;
  }
  .main-content {
    @apply pt-[4rem];
  }

  .main-content-compact {
    @apply pt-[2rem];
  }
</style>
